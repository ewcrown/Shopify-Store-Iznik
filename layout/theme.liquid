<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}" dir="{{ settings.text_direction }}">
  <head>
    <script>
      if(window.location.pathname == "/collections/lawn-2023") window.location.href = '/collections/online-exclusive-lawn/'
    </script>
    {%- if content_for_header contains 'tapita-seo-script-tags' -%}{%- include 'tapita-seo-schema' -%}{%- endif -%}

    <!-- Added by TAPITA SEO SCHEMA -->
    {% if content_for_header contains 'tapita-seo-script-tags' %}
      {% include 'tapita-seo-schema' %}
    {% endif %}
    <!-- /Added by TAPITA SEO SCHEMA -->

    <!-- Infinite Options by ShopPad -->
    <script>
      window.Shoppad = window.Shoppad || {},
      window.Shoppad.apps = window.Shoppad.apps || {},
      window.Shoppad.apps.infiniteoptions = window.Shoppad.apps.infiniteoptions || {},
      window.Shoppad.apps.infiniteoptions.validateType = 'overlay';
    </script>
    <script
      defer
      src="//d1liekpayvooaz.cloudfront.net/apps/customizery/customizery.js?shop={{shop.permanent_domain}}"
    ></script>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="{{ settings.color_button }}">
    <link rel="canonical" href="{{ canonical_url }}">
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    <link rel="preconnect" href="https://fonts.shopifycdn.com" crossorigin>
    <link rel="dns-prefetch" href="https://productreviews.shopifycdn.com">
    <link rel="dns-prefetch" href="https://ajax.googleapis.com">
    <link rel="dns-prefetch" href="https://maps.googleapis.com">
    <link rel="dns-prefetch" href="https://maps.gstatic.com">

    {%- if settings.favicon != blank -%}
      <link rel="shortcut icon" href="{{ settings.favicon | img_url: '32x32' }}" type="image/png">
    {%- endif -%}

    {%- render 'seo-title' -%}

    {%- if page_description -%}
      <meta name="description" content="{{ page_description | escape }}">
    {%- endif -%}

    {%- render 'social-meta-tags' -%}

    {%- render 'font-face' -%}
    {{ 'theme.css' | asset_url | stylesheet_tag: preload: true }}
    {{ 'custom.css' | asset_url | stylesheet_tag: preload: true }}
    {%- render 'css-variables' -%}
    {{ 'he-style.css' | asset_url | stylesheet_tag: preload: true }}

    <script>
      document.documentElement.className = document.documentElement.className.replace('no-js', 'js');

      window.theme = window.theme || {};
      theme.routes = {
        home: "{{ routes.root_url }}",
        cart: "{{ routes.cart_url | append: '.js' }}",
        cartPage: "{{ routes.cart_url }}",
        cartAdd: "{{ routes.cart_add_url | append: '.js' }}",
        cartChange: "{{ routes.cart_change_url | append: '.js' }}",
        search: "{{ routes.search_url }}",
        predictive_url: "{{ routes.predictive_search_url }}"
      };
      theme.strings = {
        soldOut: {{ 'products.product.sold_out' | t | json }},
        unavailable: {{ 'products.product.unavailable' | t | json }},
        inStockLabel: {{ 'products.product.in_stock_label' | t | json }},
        oneStockLabel: {{ 'products.product.stock_label.one' | t: count: '[count]' | json }},
        otherStockLabel: {{ 'products.product.stock_label.other' | t: count: '[count]' | json }},
        willNotShipUntil: {{ 'products.product.will_not_ship_until' | t: date: '[date]' | json }},
        willBeInStockAfter: {{ 'products.product.will_be_in_stock_after' | t: date: '[date]' | json }},
        waitingForStock: {{ 'products.product.waiting_for_stock' | t | json }},
        savePrice: {{ 'products.general.save_html' | t: saved_amount: '[saved_amount]' | json }},
        cartEmpty: {{ 'cart.general.empty' | t | json }},
        cartTermsConfirmation: {{ 'cart.general.terms_confirm' | t | json }},
        searchCollections: {{ 'general.search.collections' | t | json }},
        searchPages: {{ 'general.search.pages' | t | json }},
        searchArticles: {{ 'general.search.articles' | t | json }},
        productFrom: {{ 'products.general.from_text_html' | t: price: '' | json }},
        maxQuantity: {{ 'cart.general.max_quantity' | t: quantity: '[quantity]', title: '[title]' | json }}
      };
      theme.settings = {
        cartType: {{ settings.cart_type | json }},
        isCustomerTemplate: {% if request.page_type contains 'customers/' %}true{% else %}false{% endif %},
        moneyFormat: {{ shop.money_format | json }},
        saveType: {{ settings.product_save_type | json }},
        productImageSize: {{ settings.product_grid_image_size | json }},
        productImageCover: {{ settings.product_grid_image_fill }},
        predictiveSearch: {{ settings.predictive_search_enabled }},
        predictiveSearchType: {{ settings.search_type | json }},
        predictiveSearchVendor: {{ settings.predictive_search_show_vendor | json }},
        predictiveSearchPrice: {{ settings.predictive_search_show_price | json }},
        quickView: {{ settings.quick_shop_enable }},
        themeName: 'Impulse',
        themeVersion: "7.3.3"
      };
    </script>

    {% comment %}{{content_for_header}}{% endcomment %}
    <!-- Start of Shopioso speed boost -->
    {% capture modified_content_for_header %}{{ content_for_header }}{% endcapture %}
    {% assign domcontentloadeda = "document.addEventListener('DOMContentLoaded'" %}
    {% assign startasyncLoadinga = "document.addEventListener('StartAsyncLoading'" %}
    {% assign domcontentloaded = 'e.addEventListener("DOMContentLoaded"' %}
    {% assign startasyncLoading = "e.addEventListener('StartAsyncLoading'" %}
    {% assign rapp = ', asyncLoad' %}
    {% assign napp = ', function(){}' %}
    {% assign rappload = 'if(window.attachEvent)' %}
    {% assign nappload = "document.addEventListener('StartAsyncLoading',function(event){asyncLoad();});if(window.attachEvent)" %}
    {% assign rstorefrontload = 'var customDocumentWrite = function(content)' %}
    {% assign nstorefrontload = "document.addEventListener('StartKernelLoading', function() { document.dispatchEvent(new CustomEvent('StartShopifyLoading')); var customDocumentWrite = function(content)" %}
    {% assign rstorefront = "document.getElementsByTagName('head')[0].appendChild(eventsListenerScript)" %}
    {% assign nstorefront = "document.getElementsByTagName('head')[0].appendChild(eventsListenerScript);})" %}
    {% if template == 'cart' %}
      {{
        modified_content_for_header
        | replace: 'src=', 'data-src='
        | replace: domcontentloadeda, startasyncLoadinga
        | replace: domcontentloaded, startasyncLoading
        | replace: rapp, napp
        | replace: rappload, nappload
      }}
    {% else %}
      {{
        modified_content_for_header
        | replace: 'src=', 'data-src='
        | replace: domcontentloadeda, startasyncLoadinga
        | replace: domcontentloaded, startasyncLoading
        | replace: rapp, napp
        | replace: rappload, nappload
        | replace: rstorefrontload, nstorefrontload
        | replace: rstorefront, nstorefront
      }}
    {% endif %}

    <script>
      var script_loaded=!1;function loadJSscripts(){setTimeout(function(){if(!script_loaded){script_loaded=!0;var t=document.getElementsByTagName("script");for(i=0;i<t.length;i++)null!==t[i].getAttribute("data-src")&&(t[i].setAttribute("src",t[i].getAttribute("data-src")),delete t[i].dataset.src);var e=document.getElementsByTagName("link");for(i=0;i<e.length;i++)null!==e[i].getAttribute("data-href")&&(e[i].setAttribute("href",e[i].getAttribute("data-href")),delete e[i].dataset.href);setTimeout(function(){document.dispatchEvent(new CustomEvent("StartAsyncLoading")),document.dispatchEvent(new CustomEvent("StartKernelLoading"))},400)}console.log("Shopioso 12s wait")},12e3)}function loadJSscriptsNow(){if(!script_loaded){console.log("Shopioso scripts have loaded."),script_loaded=!0;var t=document.getElementsByTagName("script");for(i=0;i<t.length;i++)null!==t[i].getAttribute("data-src")&&(t[i].setAttribute("src",t[i].getAttribute("data-src")),delete t[i].dataset.src);var e=document.getElementsByTagName("link");for(i=0;i<e.length;i++)null!==e[i].getAttribute("data-href")&&(e[i].setAttribute("href",e[i].getAttribute("data-href")),delete e[i].dataset.href);setTimeout(function(){document.dispatchEvent(new CustomEvent("StartAsyncLoading")),document.dispatchEvent(new CustomEvent("StartKernelLoading"))},400)}}var activityEvents=["mousedown","mousemove","keydown","scroll","touchstart","click","keypress","touchmove"];activityEvents.forEach(function(t){window.addEventListener(t,loadJSscriptsNow,!1)}),document.addEventListener("DOMContentLoaded",loadJSscripts),window.addEventListener?window.addEventListener("load",loadJSscripts):window.attachEvent?window.attachEvent("onload",loadJSscripts):window.onload=loadJSscripts;
    </script>
    <!-- End of Shopioso speed boost -->

    <script src="{{ 'vendor-scripts-v11.js' | asset_url | split: '?' | first }}" defer="defer"></script>

    {%- if shop.enabled_currencies.size > 1 -%}
      <link rel="stylesheet" href="{{ 'country-flags.css' | asset_url | split: '?' | first }}">
    {%- endif -%}

    <script src="{{ 'theme.js' | asset_url }}" defer="defer"></script>

    {%- if request.page_type contains 'customers/' -%}
      <script src="{{ 'shopify_common.js' | shopify_asset_url }}" defer="defer"></script>
    {%- endif -%}

    {% if request.design_mode %}
      <script src="https://api.archetypethemes.co/design-mode.js" defer="defer"></script>
    {% endif %}
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.8.0/css/all.min.css"
      integrity="sha512-3PN6gfRNZEX4YFyz+sIyTF6pGlQiryJu9NlGhu9LrLMQ7eDjNgudQoFDK3WSNAayeIKc6B8WXXpo4a7HqxjKwg=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
      async
    >

    <script
      defer
      src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.4.0/jquery.min.js"
      integrity="sha512-Pa4Jto+LuCGBHy2/POQEbTh0reuoiEXQWXGn8S7aRlhcwpVkO8+4uoZVSOqUjdCsE+77oygfu2Tl+7qGHGIWsw=="
      crossorigin="anonymous"
      referrerpolicy="no-referrer"
    ></script>
    <meta name="facebook-domain-verification" content="ybn9u5ptc8jaxirk05u16gk03tjijo">
    <meta name="google-site-verification" content="TbpQ2mIZoimagjT5xOTv8AnPZkDF8pAiZw_AUYhSQGg">

    {% if product.tags contains 'Dahlia' %}
      <style>
        .esc-size-guide--popup .modal_content .esc-size-guide:not(:last-of-type) {
              display: none;
          }
      </style>
    {% endif %}
  </head>
  <body
    class="template-{{ template | replace: '.', ' ' | truncatewords: 1, '' | handle }}{% if request.path == '/challenge' %} template-challange{% endif %}  iznik-{{ collection.title | handleize }}"
    data-center-text="{{ settings.type_body_align_text }}"
    data-button_style="{{ settings.button_style }}"
    data-type_header_capitalize="{{ settings.type_header_capitalize }}"
    data-type_headers_align_text="{{ settings.type_headers_align_text }}"
    data-type_product_capitalize="{{ settings.type_product_capitalize }}"
    data-swatch_style="{{ settings.swatch_style }}"
    {% if settings.disable_animations %}
      data-disable-animations="true"
    {% endif %}
  >
    <a class="in-page-link visually-hidden skip-link" href="#MainContent">
      {{- 'general.accessibility.skip_to_content' | t -}}
    </a>

    <div id="PageContainer" class="page-container">
      <div class="transition-body">
        {%- sections 'header-group' -%}
        {%- sections 'popup-group' -%}
        <main class="main-content" id="MainContent">
          {{ content_for_layout }}
        </main>

        {%- sections 'footer-group' -%}
      </div>
    </div>

    {%- liquid
      render 'video-modal'
      render 'photoswipe-template'
      render 'tool-tip'
    -%}

    {% comment %} Image markup used when building product grid item via JS {% endcomment %}
    <template id="naturalImageMarkup">
      <div class="image-wrap" style="height: 0;">
        <image-element>
          <img class="grid-product__image" width height src srcset loading="lazy" alt>
        </image-element>
      </div>
    </template>
    <template id="fixedRatioImageMarkup">
      <div class="grid__image-ratio">
        <image-element>
          <img width height src srcset loading="lazy" alt>
        </image-element>
      </div>
    </template>
    <template id="articleImageMarkup">
      <image-element>
        <img width height src loading="lazy">
      </image-element>
    </template>

    <!--
      <script>
        // Wrap the code inside a DOMContentLoaded event listener
        document.addEventListener('DOMContentLoaded', function() {
          // Function to hide variant selectors based on the current URL
          function hideVariantsOnSpecificProductPage() {
            // Get the current URL
            var currentUrl = window.location.href;

            // Check if the current URL contains "/collections/pret/" and the product handle "your-product-handle"
            if (currentUrl.includes("collections/pret/products") && currentUrl.includes("products/ip-")) {
              // Select the variant selectors and hide them
              var variantSelectors = document.querySelectorAll('.variant-wrapper.js');
            var variantLast = document.querySelector('ul.hdr-custom-size-opt.radio-size-options li:last-child');
              variantSelectors.forEach(function(selector) {
                selector.style.display = 'none';
                variantLast.style.display = 'none';
              });
            }
          }

          // Call the function when the page is loaded
          hideVariantsOnSpecificProductPage();
        });
      </script>
    -->
    <script>
      document.addEventListener('DOMContentLoaded', function() {
          function convertCurrencyText(currencyText) {
              const currencyReplacements = {
                  'RS': 'PKR',
                  'Rs': 'PKR',
                  'rs': 'PKR',
              };

              for (const [symbol, replacement] of Object.entries(currencyReplacements)) {
                  currencyText = currencyText.replace(symbol, replacement);
              }

              return currencyText;
          }

          // Target the price elements and convert their text
          const priceElements = document.querySelectorAll('.product__price, grid-product__price'); // Adjust the selector based on your Shopify theme
          priceElements.forEach(function(element) {
              const originalPriceText = element.innerText;
              const convertedPriceText = convertCurrencyText(originalPriceText);
              element.innerText = convertedPriceText;
          });
      });
    </script>
    <script>
      document.addEventListener('DOMContentLoaded', function() {
          function convertCurrencyText(currencyText) {
              const currencyReplacements = {
                  'RS': 'PKR',
                  'Rs': 'PKR',
                  'rs': 'PKR',
              };

              for (const [symbol, replacement] of Object.entries(currencyReplacements)) {
                  currencyText = currencyText.replace(symbol, replacement);
              }

              return currencyText;
          }

          // Target the price elements and convert their text
          const priceElements = document.querySelectorAll('.grid-product__price .money'); // Adjust the selector based on your Shopify theme
          priceElements.forEach(function(element) {
              const originalPriceText = element.innerText;
              const convertedPriceText = convertCurrencyText(originalPriceText);
              element.innerText = convertedPriceText;
          });
      });
    </script>
  </body>
</html>
